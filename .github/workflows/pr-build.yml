# PR Build Validation
name: PR Build Validation

# Set the required permissions for the workflow
permissions:
  contents: read
  pull-requests: write

# Trigger workflow on pull requests to main and dev branches
on:
  pull_request:
    branches:
      - main
      - development

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Extract PR Information
        id: get_version
        run: |
          # Get PR number for version
          pr_number="${GITHUB_REF#refs/pull/}"
          pr_number="${pr_number%/merge}"
          echo "version=pr-${pr_number}" >> $GITHUB_OUTPUT
  #This is its own job, because a build's success should be independent of Prettier's opinions (and vice versa). Sometimes we might want to push noncompliant code.
  prettier:
    name: Prettier Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Prettier
        run: |
          pnpm install -g prettier
      - name: Prettier Format Check
        run: |
          pnpm check

  build:
    name: Build
    needs: set-version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      PR_VERSION: ${{ needs.set-version.outputs.version }}
      APP_VERSION: PR_${{ needs.set-version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install OS-specific Dependencies
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          # Install dependencies based on the operating system
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            # Ubuntu-specific dependencies
            sudo apt-get update
            sudo apt-get install -y libsecret-1-dev
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            # macOS-specific dependencies
            brew install python-setuptools
          fi

      - name: Install OS-specific Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          # Windows-specific dependencies
          npm install --global node-gyp

      - name: Run Build Script (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          # Execute Linux build script
          chmod +x electron/release-scripts/linux-dev.sh
          electron/release-scripts/linux-dev.sh "$PR_VERSION" "$GITHUB_WORKSPACE/release_artifacts/linux/$PR_VERSION"

      - name: Run Build Script (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # Execute macOS build script
          chmod +x electron/release-scripts/macos-dev.sh
          electron/release-scripts/macos-dev.sh "$PR_VERSION" "$GITHUB_WORKSPACE/release_artifacts/macos/$PR_VERSION"

      - name: Run Build Script (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          # Execute Windows build script
          .\electron\release-scripts\windows-dev.ps1 -ReleaseVersion "$env:PR_VERSION" -ReleasePath "$env:GITHUB_WORKSPACE\release_artifacts\windows\$env:PR_VERSION"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PR-${{ github.event.pull_request.number }}-${{ matrix.os }}-build
          path: release_artifacts/**
          retention-days: 14 # Keep PR builds for 14 days instead of the default 90 days
